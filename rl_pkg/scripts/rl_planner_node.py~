#!/usr/bin/env python
import rospy
from nav_msgs.msg import OccupancyGrid
from move_base_msgs.msg import MoveBaseActionGoal
import tf


# def goalPublisher(x,y,z):
#     pub = rospy.Publisher('/robot_1/move_base/goal', MoveBaseActionGoal, queue_size=10)
#     rospy.init_node('goalPublisher',anonymous=True)
#
#     q = tf.transformations.quaternion_from_euler(0,0,3.14)
#     goal = MoveBaseActionGoal()
#     goal.goal.target_pose.header.frame_id = "map"
#     goal.goal.target_pose.pose.position.x = x
#     goal.goal.target_pose.pose.position.x = y
#     goal.goal.target_pose.pose.position.x = z
#
#     goal.goal.target_pose.pose.position.orientation.x = q[0]
#     goal.goal.target_pose.pose.position.orientation.y = q[1]
#     goal.goal.target_pose.pose.position.orientation.z = q[2]
#     goal.goal.target_pose.pose.position.orientation.w = q[3]
#     rospy.loginfo(goal)
#     pub.publish(goal)

def callback(data):
    rospy.loginfo("I heard: %s ", data.data)

def stateSubscriber():
    rospy.init_node('state_subscriber',anonymous=True)
    rospy.Subscriber('/robot_1/move_base/local_costmap/costmap', OccupancyGrid, callback)
    rospy.spin()

if __name__ == '__main__':
	stateSubscriber()

